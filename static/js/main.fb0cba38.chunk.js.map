{"version":3,"sources":["store/actions/alertActions.ts","store/types.ts","store/actions/weatherActions.ts","components/Search.tsx","components/Alert.tsx","components/Weather.tsx","App.tsx","store/reducers/weatherReducer.ts","store/reducers/alertReducer.ts","store/index.ts","index.tsx"],"names":["setAlert","message","type","payload","Search","_ref","title","dispatch","useDispatch","_useState","useState","_useState2","Object","slicedToArray","city","setCity","react_default","a","createElement","className","action","onSubmit","e","preventDefault","trim","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","_resData","resData","wrap","_context","prev","next","fetch","concat","process","sent","ok","json","Error","t0","stop","_x","apply","this","arguments","getWeather","id","name","onChange","currentTarget","value","placeholder","style","maxWidth","margin","Alert","onClose","onClick","justifyContent","Weather","data","fahrenheit","main","temp","toFixed","celsius","sys","country","alignItems","marginTop","weather","description","src","icon","alt","humidity","pressure","wind","speed","App","weatherData","useSelector","state","loading","error","alertMsg","alert","components_Search","components_Weather","components_Alert","initialState","rootReducer","combineReducers","length","undefined","objectSpread","store","configureStore","reducer","middleware","thunk","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_App_0"],"mappings":"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","file":"static/js/main.fb0cba38.chunk.js","sourcesContent":["import { SET_ALERT, AlertAction } from \"../types\";\r\n\r\nexport const setAlert = (message: string): AlertAction => {\r\n    return {\r\n        type: SET_ALERT,\r\n        payload: message\r\n    }\r\n}\r\n\r\n","export const GET_WEATHER = \"GET_WEATHER\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\n\r\nexport interface Weather {\r\n    description: string;\r\n    icon: string;\r\n    id: number;\r\n    main: string;\r\n\r\n}\r\n\r\nexport interface WeatherData {\r\n    base: string;\r\n    clouds: {\r\n        all: number;\r\n    };\r\n    cod: number;\r\n    coord: {\r\n        lon: number;\r\n        lat: number;\r\n    };\r\n    dt: number;\r\n    id: number;\r\n    main: {\r\n        feels_like: number;\r\n        humidity: number;\r\n        pressure: number;\r\n        temp: number;\r\n        temp_max: number;\r\n        temp_min: number;\r\n    };\r\n    name: string;\r\n    sys: {\r\n        country: string;\r\n        id: number;\r\n        sunrise: number;\r\n        sunset: number;\r\n        type: number;\r\n    };\r\n    timezone: number;\r\n    visibility: number;\r\n    weather: Weather[];\r\n    wind: {\r\n        speed: number;\r\n        deg: number;\r\n    };\r\n}\r\n\r\nexport interface WeatherError {\r\n    cod: string;\r\n    message: string;\r\n}\r\n\r\nexport interface WeatherState {\r\n    data: WeatherData | null;\r\n    loading: boolean;\r\n    error: string;\r\n}\r\ninterface GetWeatherAction {\r\n    type: typeof GET_WEATHER;\r\n    payload: WeatherData;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n    type: typeof SET_LOADING;\r\n}\r\n\r\ninterface SetErrorAction {\r\n    type: typeof SET_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type WeatherAction = GetWeatherAction | SetLoadingAction | SetErrorAction;\r\n\r\nexport interface AlertAction {\r\n    type: typeof SET_ALERT;\r\n    payload: string;\r\n}\r\n\r\nexport interface AlertState {\r\n    message: string;\r\n}\r\n\r\n\r\n\r\n\r\n","import { ThunkAction, ThunkDispatch } from \"redux-thunk\";\r\nimport { RootState } from \"..\";\r\nimport { WeatherAction, WeatherData, WeatherError, GET_WEATHER, SET_LOADING, SET_ERROR } from \"../types\";\r\n\r\nexport const getWeather = (city: string): ThunkAction<void, RootState, null, WeatherAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`);\r\n\r\n            if (!res.ok) {\r\n                const resData: WeatherError = await res.json();\r\n                throw new Error(resData.message);\r\n            }\r\n\r\n            const resData: WeatherData = await res.json();\r\n            dispatch({\r\n                type: GET_WEATHER,\r\n                payload: resData\r\n            });\r\n        } catch (err: any) {\r\n            dispatch({\r\n                type: SET_ERROR,\r\n                payload: err.message\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const setLoading = (): WeatherAction => {\r\n    return {\r\n        type: SET_LOADING\r\n    }\r\n}\r\n\r\nexport const setError = (): WeatherAction => {\r\n    return {\r\n        type: SET_ERROR,\r\n        payload: \"\"\r\n    }\r\n}\r\n\r\n\r\n","import React, { FC, FormEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/actions/alertActions\";\r\nimport { getWeather, setLoading } from \"../store/actions/weatherActions\";\r\nimport { AppDispatch, RootState } from \"../store\";\r\n\r\ninterface SearchProps {\r\n    title: string;\r\n}\r\n\r\nconst Search: FC<SearchProps> = ({ title }) => {\r\n    const dispatch: AppDispatch = useDispatch();\r\n    // const thunkDispatch= ThunkDispatch<typeof city, undefined, AnyAction>;\r\n    const [city, setCity] = useState(\"\");\r\n    const changeHandler = (e: FormEvent<HTMLInputElement>) => {\r\n        setCity(e.currentTarget.value);\r\n    };\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (city.trim() === \"\") {\r\n            return dispatch(setAlert(\"City is required!\"));\r\n        }\r\n        dispatch(setLoading());\r\n        dispatch(getWeather(city));\r\n        setCity(\"\");\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"hero is-light has-text-centered\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"title\">{title}</h1>\r\n                    <form action=\"\" className=\"py-5\" onSubmit={submitHandler}>\r\n                        <input\r\n                            className=\"input has-text-centered mb-2\"\r\n                            id=\"\"\r\n                            name=\"\"\r\n                            onChange={changeHandler}\r\n                            placeholder=\"Enter city name\"\r\n                            style={{ maxWidth: 300 }}\r\n                            type=\"text\"\r\n                            value={city}\r\n                        />\r\n                        <button className=\"button is-primary is-fullwidth\" style={{ maxWidth: 300, margin: \"0 auto\" }}>Search</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { FC } from \"react\";\r\n\r\ninterface AlertProps {\r\n    message: string;\r\n    onClose: () => void\r\n}\r\n\r\n\r\nconst Alert: FC<AlertProps> = ({ message, onClose }) => {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\">\r\n            <div className=\"modal-background\" onClick={onClose}></div>\r\n            <div className=\"modal-card\">\r\n                <header className=\"modal-card-head has-background-danger\">\r\n                    <p className=\"modal-card-title has-text-white\">{message}</p>\r\n                </header>\r\n                <footer className=\"modal-card-foot\" style={{ justifyContent: \"center\" }}>\r\n                    <button className=\"button\" onClick={onClose}>Close</button>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import React, { FC } from \"react\";\r\nimport { WeatherData } from \"../store/types\";\r\n\r\ninterface WeatherProps {\r\n    data: WeatherData;\r\n}\r\n\r\nconst Weather: FC<WeatherProps> = ({ data }) => {\r\n    const fahrenheit = (data.main.temp * 1.8 + 459.67).toFixed(2);\r\n    const celsius = (data.main.temp - 273.15).toFixed(2);\r\n    return (\r\n        <section className=\"section\">\r\n            <div className=\"container\">\r\n                <h1 className=\"title has-text-centered\">{data.name} - {data.sys.country}</h1>\r\n                <div className=\"level\" style={{ alignItems: \"flex-start\", marginTop: 50 }}>\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                            <p className=\"heading\">{data.weather[0].description}</p>\r\n                            <p className=\"title\">\r\n                                <img src={`https://openweathermap.org/img/wn/${data.weather[0].icon}.png`} alt={`{data.name}.png`} />\r\n                            </p>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                            <p className=\"heading\">temp</p>\r\n                            <div className=\"title\">\r\n                                <p className=\"mb-2\">{data.main.temp} <sup>&#8490;</sup> </p>\r\n                                <p className=\"mb-2\">{fahrenheit} <sup>&#8457;</sup></p>\r\n                                <p className=\"mb-2\">{celsius} <sup>&#8451;</sup> </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                            <p className=\"heading\">humidity</p>\r\n                            <p className=\"title\">{data.main.humidity}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                            <p className=\"heading\">pressure</p>\r\n                            <p className=\"title\">{data.main.pressure}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                            <p className=\"heading\">wind</p>\r\n                            <p className=\"title\">{data.wind.speed}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>{/* .LEVEL */}\r\n            </div>{/* .CONTAINER */}\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Weather","import React, { FC } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './App.css';\nimport { RootState } from './store';\nimport Search from './components/Search';\nimport Alert from './components/Alert';\nimport Weather from \"./components/Weather\"\nimport { setAlert } from \"./store/actions/alertActions\";\nimport { setError } from './store/actions/weatherActions';\n\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  const weatherData = useSelector((state: RootState) => state.weather.data);\n  const loading = useSelector((state: RootState) => state.weather.loading);\n  const error = useSelector((state: RootState) => state.weather.error);\n  const alertMsg = useSelector((state: RootState) => state.alert.message);\n\n  return (\n    <div className=\"App has-text-centered\">\n      <Search title=\"Enter city name and press search buttom\" />\n      {\n        loading\n          ? <h2 className='is-size-3 py-2'>Loading...</h2>\n          : weatherData && <Weather data={weatherData} />\n      }\n\n      {alertMsg && <Alert message={alertMsg} onClose={() => dispatch(setAlert(\"\"))} />}\n      {error && <Alert message={error} onClose={() => dispatch(setError())} />}\n\n    </div>\n  );\n}\n\nexport default App;\n","import { WeatherState, WeatherAction, GET_WEATHER, SET_ERROR, SET_LOADING } from \"../types\";\r\n\r\nconst initialState: WeatherState = {\r\n    data: null,\r\n    loading: false,\r\n    error: \"\"\r\n}\r\n\r\nexport default (state = initialState, action: WeatherAction): WeatherState => {\r\n    switch (action.type) {\r\n        case GET_WEATHER:\r\n            return {\r\n                data: action.payload,\r\n                loading: false,\r\n                error: \"\"\r\n            }\r\n            break;\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n            break;\r\n\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}","import { AlertState, AlertAction, SET_ALERT } from \"../types\";\r\n\r\nconst initialState: AlertState = {\r\n    message: \"\"\r\n}\r\n\r\nexport default (state = initialState, action: AlertAction): AlertState => {\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return {\r\n                message: action.payload\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}","import { AnyAction, applyMiddleware, combineReducers } from \"redux\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { composeWithDevTools } from \"@redux-devtools/extension\";\r\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\r\n\r\nimport weatherReducer from \"./reducers/weatherReducer\";\r\nimport alertReducer from \"./reducers/alertReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    weather: weatherReducer,\r\n    alert: alertReducer\r\n})\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [thunk]\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\nexport type AppDispatch = ThunkDispatch<AppState, any, AnyAction>;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"../node_modules/bulma/css/bulma.min.css\";\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}